################################################################################
#
# RevBayes Validation Test: dnInverse
#
# Model: Various: these tests validate the behaviour of dnInverse()
#
#
# authors: Martin R. Smith, following Validation_Exponential.Rev
#
################################################################################

seed(42)
write("Values on each row should be identical:")

# Test Inverse Exponential distribution
exp ~ dnExp(1)
exp.clamp(42)
invExp ~ dnInv(dnExp(1))
invExp.clamp(42)
print("TestExp: ", -exp.lnProbability(), "42", invExp.lnProbability())


# Test Inverse Phylogenetic distribution
chars <- readDiscreteCharacterData("data/primates_cytb.nex")

taxa <- chars.names()
n_taxa <- chars.size()
n_edge <- 2 * nTaxa - 3

topology ~ dnUniformTopology(taxa)
br_lengths ~ dnDirichlet(rep(1.0, nEdge))
phylogeny := treeAssembly(topology, br_lengths)

k ~ dnUniform(1, 10)
kRates := [ [ 0, k],
            [ 1, 0] ]
qK := fnFreeK(kRates)
phy ~ dnPhyloCTMC(tree = phylogeny, Q = qK, type = "Standard")
phy.clamp(chars)

invPhy ~ dnInv(dnPhyloCTMC(tree = phylogeny, Q = qK, type = "Standard"))
invPhy.clamp(chars)

# Check that print function can access parameters
invPhy

k.clamp(1)
print(k, "Expect equal:", -phy.lnProbability(), invPhy.lnProbability())

# Check distribution is touched when parameters are modified
k.clamp(5)
print(k, "Expect equal:", -phy.lnProbability(), invPhy.lnProbability())
