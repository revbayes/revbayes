seed(12345)

# read stratigraphic ranges
taxa <- readTaxonData("data/bears_taxa.tsv")

# interval boundaries
timeline <- v(5,10,15,20)

# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

alpha <- 10

# specify FBDR model parameters
for(i in 1:(timeline.size()+1))
{

	mu[i] ~ dnExp(alpha)
	lambda[i] ~ dnExp(alpha)
	psi[i] ~ dnExp(alpha)
	
	div[i] := lambda[i] - mu[i]
	turnover[i] := mu[i]/lambda[i]

	moves.append( mvScale(mu[i], lambda = 0.01) )
	moves.append( mvScale(mu[i], lambda = 0.1) )
	moves.append( mvScale(mu[i], lambda = 1) )

	moves.append( mvScale(lambda[i], lambda = 0.01) )
	moves.append( mvScale(lambda[i], lambda = 0.1) )
	moves.append( mvScale(lambda[i], lambda = 1) )

	moves.append( mvScale(psi[i], lambda = 0.01) )
	moves.append( mvScale(psi[i], lambda = 0.1) )
	moves.append( mvScale(psi[i], lambda = 1) )
}

min_age = 0.0
for(i in 1:taxa.size())
{
	if ( taxa[i].getMinAge() > min_age )
	{
		min_age = taxa[i].getMinAge()
	}
}

origin ~ dnUniform(min_age,min_age+100)

moves.append( mvScale(origin, lambda = 0.01) )
moves.append( mvScale(origin, lambda = 0.1) )
moves.append( mvScale(origin, lambda = 1) )

bd ~ dnFBDSP(originAge=origin, lambda=lambda, mu=mu, psi=psi, rho=1, taxa=taxa, timeline=timeline)

moves.append( mvResampleFBD(bd, weight=taxa.size()) )

moves.append( mvFNPR(bd, weight = taxa.size()) )
moves.append( mvNodeTimeSlideUniform(bd, weight = taxa.size()) )
moves.append( mvRootTimeSlideUniform(bd, origin=origin, weight = taxa.size()) )
#moves.append( mvCollapseExpandFossilBranch(bd, origin=origin, weight = taxa.size()) )
moves.append( mvTipTimeSlideUniform(bd, weight = taxa.size()) )

mymodel = model(bd)

# add monitors
monitors.append( mnScreen(lambda, mu, psi, printgen=10) )
monitors.append( mnModel(filename="output/FBDSP.log",printgen=1) )
monitors.append( mnFile(filename="output/FBDSP.trees",printgen=1,bd) )

# run the analysis
mymcmc = mcmc(mymodel, moves, monitors, moveschedule="random")
mymcmc.run(100)

q()
