   Processing file "data/500_ncd.trees"

Progress:
0---------------25---------------50---------------75--------------100
********************************************************************

###################################################################
# Test .size(), .getBurnin(), .setBurnin(), .getNumberOfSamples() #
###################################################################

Total trees in trace: 500
Initial burnin: 0
# of post-burnin samples according to .size(): 500
# of post-burnin samples according to .getNumberSamples(): 500

Since the burnin is 0, the numbers returned by .getNumberSamples()
should be the same regardless of whether the `post` argument is set
to TRUE or FALSE. Are they?
TRUE

Trying to change burnin to 10% of trace length...

Total trees in trace: 500
Current burnin: 50
# of post-burnin samples according to .size(): 450
# of post-burnin samples according to .getNumberSamples(): 450

Since we now have a nonzero burnin, testing the numbers returned by 
.getNumberSamples() with `post` set to TRUE and FALSE for equality
should yield FALSE:
FALSE

###################################
# Test .getTree() and .getTrees() #
###################################

Can we extract the same tree using both regular and post-burnin indices?
TRUE
Can we extract the i-th tree using both .getTree(i) and .getTrees()[i]?
TRUE
Does the .getTrees() method return the number of post-burnin trees only?
TRUE

#####################################################
# Test .getTopologyFrequency() and .isTreeCovered() #
#####################################################

Frequency of trees that are topologically identical to the 5th tree in the trace: 0.12
Is this tree part of the 50% credible set?
FALSE

###################################################################
# Test .cladeProbability(), .getTMRCA(), .jointCladeProbability() #
###################################################################

Frequency of the (B+S) clade: 0.28
Joint frequency of the (B+S) and (Hm+Hp) clades: 0.253333

Crown ages of clade (B+S), calculated only from those trees in which the two form an exclusive clade:

   [ 6.502, -1.000, 8.133, -1.000, 7.247, -1.000, -1.000, 6.631, -1.000, -1.000, 5.844, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 8.027, -1.000, -1.000, 3.946, 6.228, 8.472, -1.000, -1.000, 6.246, 4.080, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, 7.734, -1.000, -1.000, -1.000, -1.000, -1.000, 9.825, 3.004, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, 7.739, 6.953, -1.000, -1.000, 4.514, -1.000, -1.000, -1.000, -1.000, -1.000, 7.226, 4.512, 6.939, -1.000, 4.824, 5.348, -1.000, 6.564, -1.000, 4.452,
   -1.000, -1.000, 8.006, -1.000, 5.018, -1.000, -1.000, 5.372, 8.235, 7.367, 5.286, -1.000, -1.000, -1.000, -1.000, -1.000, 6.141, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 6.016, -1.000, -1.000, -1.000, -1.000, -1.000, 6.008,
   -1.000, -1.000, -1.000, 5.886, -1.000, -1.000, 5.386, -1.000, -1.000, 5.331, -1.000, 8.287, -1.000, 6.483, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, 5.801, -1.000, 6.807, 4.711, -1.000, -1.000, -1.000, -1.000, -1.000, 6.745, -1.000, -1.000, -1.000, -1.000, 6.271,
   -1.000, -1.000, 5.307, 4.675, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.783, -1.000, 9.882, -1.000, -1.000, -1.000, -1.000, 4.228,
   8.031, -1.000, -1.000, -1.000, -1.000, 8.177, 4.501, -1.000, 6.538, -1.000, -1.000, -1.000, -1.000, 5.927, 5.163, 9.169, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, 6.253, 7.683, 10.201, -1.000, -1.000, -1.000, 6.048, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 5.310, -1.000, -1.000, 6.402, 4.408, -1.000, 8.138, -1.000, -1.000, -1.000,
   7.032, -1.000, -1.000, 7.771, 6.032, -1.000, -1.000, 12.678, -1.000, -1.000, -1.000, 8.015, 7.001, 5.252, -1.000, 6.590, -1.000, 7.913, 6.772, 7.165, -1.000,
   -1.000, -1.000, 5.181, -1.000, 4.596, -1.000, 6.251, -1.000, -1.000, -1.000, -1.000, 9.552, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, 6.446, -1.000, -1.000, -1.000, -1.000, 5.136, -1.000, -1.000, -1.000, -1.000, 4.694, 6.855, -1.000, -1.000, -1.000, 6.066,
   -1.000, 6.714, 6.307, 6.949, 9.164, 9.466, -1.000, 4.135, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, 6.121, -1.000, -1.000, 4.681, -1.000, -1.000, 3.561, -1.000, 4.391, -1.000, 5.764, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 6.222, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 5.294, 6.525, 5.969, 5.907, 6.998, -1.000, -1.000,
   -1.000, 7.641, -1.000, -1.000, 7.684, -1.000, -1.000, -1.000, 8.605, 5.335, -1.000, 5.655, 4.606, 5.049, -1.000, -1.000, -1.000, 5.331, 7.325, 7.100, -1.000,
   -1.000, -1.000, -1.000, 11.611, 7.457, -1.000, -1.000, 8.011, 9.977, -1.000, -1.000, 5.561, 6.686, -1.000, 7.680, 5.869, 9.212, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.007, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 4.959, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, 8.063, -1.000, -1.000, 6.406, 5.360, -1.000, -1.000, 4.395, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   5.610, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000 ]

Stem ages of clade (B+S), calculated only from those trees in which the two form an exclusive clade:

   [ 8.550, -1.000, 11.159, -1.000, 8.991, -1.000, -1.000, 9.614, -1.000, -1.000, 10.068, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 12.129, -1.000, -1.000, 5.111, 7.299, 10.558, -1.000, -1.000, 8.113, 4.952,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 9.541, -1.000, -1.000, -1.000, -1.000, -1.000, 10.821, 6.382, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, 10.633, 11.072, -1.000, -1.000, 5.172, -1.000, -1.000, -1.000, -1.000, -1.000, 8.718, 5.777, 8.493, -1.000, 5.655, 6.269, -1.000, 7.976,
   -1.000, 6.569, -1.000, -1.000, 9.464, -1.000, 8.003, -1.000, -1.000, 9.367, 10.387, 9.195, 7.525, -1.000, -1.000, -1.000, -1.000, -1.000, 9.658, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 8.737, -1.000, -1.000, -1.000,
   -1.000, -1.000, 7.754, -1.000, -1.000, -1.000, 6.641, -1.000, -1.000, 8.141, -1.000, -1.000, 6.972, -1.000, 11.542, -1.000, 7.994, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 6.750, -1.000, 8.821, 7.361, -1.000, -1.000, -1.000, -1.000, -1.000, 8.832, -1.000, -1.000,
   -1.000, -1.000, 6.885, -1.000, -1.000, 9.589, 7.843, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 8.980, -1.000, 10.942, -1.000, -1.000,
   -1.000, -1.000, 6.394, 10.957, -1.000, -1.000, -1.000, -1.000, 10.598, 5.436, -1.000, 8.187, -1.000, -1.000, -1.000, -1.000, 7.288, 5.839, 11.797, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, 7.253, 8.986, 11.216, -1.000, -1.000, -1.000, 9.179, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.246, -1.000, -1.000, 8.529, 6.098, -1.000, 11.009,
   -1.000, -1.000, -1.000, 8.041, -1.000, -1.000, 9.350, 7.055, -1.000, -1.000, 13.522, -1.000, -1.000, -1.000, 10.216, 9.654, 6.917, -1.000, 8.070, -1.000,
   10.442, 8.520, 8.249, -1.000, -1.000, -1.000, 6.628, -1.000, 7.900, -1.000, 7.351, -1.000, -1.000, -1.000, -1.000, 11.606, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.498, -1.000, -1.000, -1.000, -1.000, 8.164, -1.000, -1.000, -1.000, -1.000, 7.258, 8.731,
   -1.000, -1.000, -1.000, 7.982, -1.000, 8.527, 7.647, 7.842, 11.155, 11.152, -1.000, 5.148, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, 7.975, -1.000, -1.000, 10.401, -1.000, -1.000, 4.947, -1.000, 5.613, -1.000, 7.221, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, 7.278, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.372, 9.123, 6.936,
   7.836, 8.496, -1.000, -1.000, -1.000, 9.985, -1.000, -1.000, 8.531, -1.000, -1.000, -1.000, 9.590, 6.539, -1.000, 6.625, 5.758, 6.580, -1.000, -1.000,
   -1.000, 8.255, 8.006, 7.900, -1.000, -1.000, -1.000, -1.000, 12.630, 9.126, -1.000, -1.000, 10.823, 12.955, -1.000, -1.000, 7.494, 7.548, -1.000, 12.043,
   7.682, 12.345, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 10.571, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 7.060,
   -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000, 9.068, -1.000, -1.000, 7.536, 6.670, -1.000, -1.000, 6.050, -1.000, -1.000, -1.000, -1.000,
   -1.000, -1.000, -1.000, -1.000, -1.000, 7.629, -1.000, -1.000, -1.000, -1.000, -1.000, -1.000 ]

Crown ages of the clade originating with the MRCA of B and S:

   [ 6.502, 9.369, 8.133, 10.469, 7.247, 8.181, 8.675, 6.631, 10.984, 9.641, 5.844, 5.882, 6.636, 7.850, 10.953, 6.535, 12.700, 12.635, 8.548, 14.861, 12.227,
   8.596, 7.478, 8.998, 5.651, 9.805, 7.820, 6.137, 8.625, 8.027, 10.415, 8.551, 3.946, 6.228, 8.472, 6.853, 13.302, 6.246, 4.080, 5.732, 10.934, 9.001, 11.441,
   12.854, 11.628, 7.734, 8.850, 10.195, 9.823, 4.707, 10.234, 9.825, 3.004, 10.929, 9.615, 7.955, 8.009, 8.619, 9.481, 6.694, 8.645, 7.739, 6.953, 16.694,
   11.574, 4.514, 9.241, 6.849, 4.742, 5.623, 7.489, 7.226, 4.512, 6.939, 10.345, 4.824, 5.348, 10.285, 6.564, 10.104, 4.452, 5.772, 9.429, 8.006, 7.822, 5.018,
   10.656, 8.085, 5.372, 8.235, 7.367, 5.286, 8.532, 8.257, 10.666, 9.472, 11.634, 6.141, 10.525, 8.379, 12.494, 7.923, 7.152, 12.265, 7.630, 10.231, 7.929,
   6.558, 7.944, 9.941, 8.386, 7.979, 6.660, 8.793, 6.016, 8.392, 5.089, 6.276, 6.591, 8.535, 6.008, 7.678, 10.148, 7.349, 5.886, 8.464, 11.034, 5.386, 6.514,
   9.845, 5.331, 7.462, 8.287, 9.090, 6.483, 3.941, 8.427, 6.851, 5.373, 8.837, 7.671, 5.673, 6.931, 5.788, 8.265, 10.276, 5.801, 8.358, 6.807, 4.711, 6.382,
   7.152, 10.481, 8.205, 10.178, 6.745, 11.189, 7.406, 12.242, 9.134, 6.271, 5.131, 8.938, 5.307, 4.675, 9.239, 7.231, 5.177, 6.831, 5.718, 4.022, 9.469, 6.215,
   7.783, 10.991, 9.882, 8.028, 12.017, 9.568, 14.550, 4.228, 8.031, 13.693, 5.980, 9.174, 8.487, 8.177, 4.501, 7.252, 6.538, 12.469, 13.373, 9.871, 7.143,
   5.927, 5.163, 9.169, 9.509, 8.353, 8.310, 6.777, 10.860, 6.823, 6.253, 7.683, 10.201, 6.636, 7.849, 11.554, 6.048, 7.404, 11.408, 4.692, 9.444, 11.729,
   11.954, 7.759, 6.478, 8.811, 11.093, 5.793, 11.262, 11.624, 7.639, 8.135, 12.133, 8.002, 8.229, 9.146, 10.398, 4.995, 5.310, 10.120, 7.037, 6.402, 4.408,
   13.795, 8.138, 9.139, 9.823, 11.210, 7.032, 8.604, 5.210, 7.771, 6.032, 9.802, 10.715, 12.678, 11.566, 8.864, 7.026, 8.015, 7.001, 5.252, 10.186, 6.590,
   7.760, 7.913, 6.772, 7.165, 11.712, 6.979, 10.385, 5.181, 8.177, 4.596, 9.545, 6.251, 8.176, 12.321, 12.559, 8.564, 9.552, 12.855, 13.014, 7.022, 11.586,
   14.049, 8.790, 10.004, 6.937, 6.228, 14.291, 7.020, 6.996, 6.446, 8.628, 8.242, 9.218, 7.518, 5.136, 9.371, 10.539, 10.453, 11.767, 4.694, 6.855, 9.709,
   13.814, 13.738, 6.066, 9.353, 6.714, 6.307, 6.949, 9.164, 9.466, 5.338, 4.135, 8.469, 6.700, 7.150, 5.156, 5.133, 4.882, 4.458, 5.606, 10.138, 6.231, 6.899,
   8.600, 11.384, 6.121, 9.084, 5.855, 4.681, 9.639, 6.869, 3.561, 8.542, 4.391, 7.127, 5.764, 13.147, 8.968, 10.876, 12.686, 8.256, 10.404, 6.222, 8.686,
   5.460, 7.325, 7.841, 10.242, 11.403, 7.159, 9.626, 8.838, 6.966, 8.386, 7.264, 10.917, 8.027, 5.294, 6.525, 5.969, 5.907, 6.998, 5.947, 8.838, 9.481, 7.641,
   5.970, 6.332, 7.684, 7.197, 9.371, 7.564, 8.605, 5.335, 10.608, 5.655, 4.606, 5.049, 8.503, 5.313, 10.585, 5.331, 7.325, 7.100, 8.012, 7.047, 6.421, 7.088,
   11.611, 7.457, 7.342, 13.022, 8.011, 9.977, 8.988, 7.373, 5.561, 6.686, 8.289, 7.680, 5.869, 9.212, 8.216, 6.976, 7.875, 8.818, 11.377, 6.389, 11.175,
   13.377, 12.233, 6.280, 7.007, 7.233, 10.135, 10.384, 11.059, 7.369, 13.332, 4.959, 10.831, 8.059, 7.723, 8.511, 5.877, 13.174, 12.197, 9.874, 8.063, 13.274,
   9.534, 6.406, 5.360, 7.723, 6.906, 4.395, 9.167, 12.272, 7.605, 12.836, 11.063, 9.042, 7.862, 7.148, 13.208, 5.610, 9.400, 10.312, 7.447, 8.710, 10.461,
   8.597 ]

Stem ages of the clade originating with the MRCA of B and S:

   [ 6.502, 9.369, 8.133, 10.469, 7.247, 8.181, 8.675, 6.631, 10.984, 9.641, 5.844, 5.882, 6.636, 7.850, 10.953, 6.535, 12.700, 12.635, 8.548, 14.861, 12.227,
   8.596, 7.478, 8.998, 5.651, 9.805, 7.820, 6.137, 8.625, 8.027, 10.415, 8.551, 3.946, 6.228, 8.472, 6.853, 13.302, 6.246, 4.080, 5.732, 10.934, 9.001, 11.441,
   12.854, 11.628, 7.734, 8.850, 10.195, 9.823, 4.707, 10.234, 9.825, 3.004, 10.929, 9.615, 7.955, 8.009, 8.619, 9.481, 6.694, 8.645, 7.739, 6.953, 16.694,
   11.574, 4.514, 9.241, 6.849, 4.742, 5.623, 7.489, 7.226, 4.512, 6.939, 10.345, 4.824, 5.348, 10.285, 6.564, 10.104, 4.452, 5.772, 9.429, 8.006, 7.822, 5.018,
   10.656, 8.085, 5.372, 8.235, 7.367, 5.286, 8.532, 8.257, 10.666, 9.472, 11.634, 6.141, 10.525, 8.379, 12.494, 7.923, 7.152, 12.265, 7.630, 10.231, 7.929,
   6.558, 7.944, 9.941, 8.386, 7.979, 6.660, 8.793, 6.016, 8.392, 5.089, 6.276, 6.591, 8.535, 6.008, 7.678, 10.148, 7.349, 5.886, 8.464, 11.034, 5.386, 6.514,
   9.845, 5.331, 7.462, 8.287, 9.090, 6.483, 3.941, 8.427, 6.851, 5.373, 8.837, 7.671, 5.673, 6.931, 5.788, 8.265, 10.276, 5.801, 8.358, 6.807, 4.711, 6.382,
   7.152, 10.481, 8.205, 10.178, 6.745, 11.189, 7.406, 12.242, 9.134, 6.271, 5.131, 8.938, 5.307, 4.675, 9.239, 7.231, 5.177, 6.831, 5.718, 4.022, 9.469, 6.215,
   7.783, 10.991, 9.882, 8.028, 12.017, 9.568, 14.550, 4.228, 8.031, 13.693, 5.980, 9.174, 8.487, 8.177, 4.501, 7.252, 6.538, 12.469, 13.373, 9.871, 7.143,
   5.927, 5.163, 9.169, 9.509, 8.353, 8.310, 6.777, 10.860, 6.823, 6.253, 7.683, 10.201, 6.636, 7.849, 11.554, 6.048, 7.404, 11.408, 4.692, 9.444, 11.729,
   11.954, 7.759, 6.478, 8.811, 11.093, 5.793, 11.262, 11.624, 7.639, 8.135, 12.133, 8.002, 8.229, 9.146, 10.398, 4.995, 5.310, 10.120, 7.037, 6.402, 4.408,
   13.795, 8.138, 9.139, 9.823, 11.210, 7.032, 8.604, 5.210, 7.771, 6.032, 9.802, 10.715, 12.678, 11.566, 8.864, 7.026, 8.015, 7.001, 5.252, 10.186, 6.590,
   7.760, 7.913, 6.772, 7.165, 11.712, 6.979, 10.385, 5.181, 8.177, 4.596, 9.545, 6.251, 8.176, 12.321, 12.559, 8.564, 9.552, 12.855, 13.014, 7.022, 11.586,
   14.049, 8.790, 10.004, 6.937, 6.228, 14.291, 7.020, 6.996, 6.446, 8.628, 8.242, 9.218, 7.518, 5.136, 9.371, 10.539, 10.453, 11.767, 4.694, 6.855, 9.709,
   13.814, 13.738, 6.066, 9.353, 6.714, 6.307, 6.949, 9.164, 9.466, 5.338, 4.135, 8.469, 6.700, 7.150, 5.156, 5.133, 4.882, 4.458, 5.606, 10.138, 6.231, 6.899,
   8.600, 11.384, 6.121, 9.084, 5.855, 4.681, 9.639, 6.869, 3.561, 8.542, 4.391, 7.127, 5.764, 13.147, 8.968, 10.876, 12.686, 8.256, 10.404, 6.222, 8.686,
   5.460, 7.325, 7.841, 10.242, 11.403, 7.159, 9.626, 8.838, 6.966, 8.386, 7.264, 10.917, 8.027, 5.294, 6.525, 5.969, 5.907, 6.998, 5.947, 8.838, 9.481, 7.641,
   5.970, 6.332, 7.684, 7.197, 9.371, 7.564, 8.605, 5.335, 10.608, 5.655, 4.606, 5.049, 8.503, 5.313, 10.585, 5.331, 7.325, 7.100, 8.012, 7.047, 6.421, 7.088,
   11.611, 7.457, 7.342, 13.022, 8.011, 9.977, 8.988, 7.373, 5.561, 6.686, 8.289, 7.680, 5.869, 9.212, 8.216, 6.976, 7.875, 8.818, 11.377, 6.389, 11.175,
   13.377, 12.233, 6.280, 7.007, 7.233, 10.135, 10.384, 11.059, 7.369, 13.332, 4.959, 10.831, 8.059, 7.723, 8.511, 5.877, 13.174, 12.197, 9.874, 8.063, 13.274,
   9.534, 6.406, 5.360, 7.723, 6.906, 4.395, 9.167, 12.272, 7.605, 12.836, 11.063, 9.042, 7.862, 7.148, 13.208, 5.610, 9.400, 10.312, 7.447, 8.710, 10.461,
   8.597 ]

When we do not require the group (B+S) to be strictly monophyletic,
do we get as many ages for it as there are post-burnin samples?
TRUE

#################################################
# Test .getUniqueClades() and .getUniqueTrees() #
#################################################

Unique clades with a posterior probability of at least 0.05:
   [ {B, Hm, Hp, N, S}, {Hm, Hp}, {B, S}, {Hm, Hp, N}, {B, Hm, Hp, S}, {Hm, Hp, S}, {N, S}, {B, N}, {Hm, Hp, N, S}, {B, N, S}, {B, Hm, Hp}, {B, Hm, Hp, N} ]

Unique topologies in this trace: 59

################################################################################
# Test .computeEntropy(), .computePairwiseRFDistances(), .computeTreeLengths() #
################################################################################

Entropy of the entire post-burnin sample: 1.45455

Extract all unique trees, coerce the resulting vector to a new tree
trace, and compute pairwise RF distances between its elements:

   [ 6.000, 6.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000, 4.000, 6.000, 2.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 2.000, 6.000, 6.000, 4.000, 8.000, 6.000, 6.000, 2.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 2.000, 2.000,
   4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000,
   4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 8.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 2.000,
   4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 4.000, 4.000, 4.000, 4.000, 6.000, 6.000,
   4.000, 2.000, 6.000, 8.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 6.000, 6.000, 8.000,
   6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 4.000, 4.000, 4.000, 4.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 8.000, 6.000, 6.000, 6.000, 4.000, 4.000,
   4.000, 2.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 2.000, 2.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000,
   4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 8.000, 6.000, 6.000, 4.000, 2.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000,
   4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 4.000, 8.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 4.000, 4.000, 6.000, 6.000, 2.000, 4.000, 4.000, 2.000,
   4.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 8.000, 2.000, 2.000, 6.000, 6.000,
   4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 4.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 8.000, 4.000, 4.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 2.000, 4.000,
   4.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 8.000,
   8.000, 8.000, 8.000, 8.000, 6.000, 8.000, 4.000, 8.000, 6.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 8.000, 4.000,
   8.000, 8.000, 8.000, 8.000, 8.000, 6.000, 8.000, 8.000, 8.000, 8.000, 6.000, 2.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 2.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 6.000, 4.000,
   4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 4.000, 4.000, 4.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 4.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000,
   4.000, 6.000, 4.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000,
   6.000, 6.000, 4.000, 6.000, 2.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 2.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000,
   6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 2.000, 6.000, 6.000, 6.000, 4.000, 6.000, 2.000, 4.000, 2.000, 6.000, 4.000, 6.000, 6.000,
   6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000,
   4.000, 4.000, 4.000, 4.000, 2.000, 6.000, 4.000, 4.000, 2.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 4.000, 6.000,
   4.000, 6.000, 4.000, 4.000, 2.000, 4.000, 4.000, 4.000, 4.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 2.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 2.000, 4.000, 4.000, 2.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 2.000, 4.000, 4.000, 6.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 2.000, 4.000, 6.000, 6.000, 6.000,
   4.000, 6.000, 4.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000,
   4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000,
   4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 2.000, 4.000, 4.000, 6.000,
   6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   4.000, 6.000, 4.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 4.000, 6.000, 4.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   4.000, 6.000, 4.000, 6.000, 4.000, 4.000, 2.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 2.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000,
   6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000, 6.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000,
   2.000, 6.000, 4.000, 6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 2.000, 4.000, 4.000, 2.000, 6.000, 4.000, 6.000, 6.000,
   6.000, 4.000, 6.000, 6.000, 6.000, 6.000, 6.000, 6.000, 4.000, 6.000, 6.000, 4.000, 2.000, 2.000, 4.000, 4.000, 4.000, 4.000, 4.000, 2.000, 4.000, 2.000 ]

Are we getting the expected number of distances, i.e, n*(n - 1)/2 for n trees?
FALSE

Tree lengths:

   [ 63.435, 62.888, 63.900, 65.633, 59.902, 60.854, 59.903, 62.351, 68.970, 72.777, 63.896, 58.190, 55.347, 60.563, 66.852, 58.653, 74.866, 75.381, 61.584,
   83.346, 72.136, 58.285, 55.937, 58.115, 54.621, 63.124, 57.755, 58.324, 58.587, 66.242, 64.855, 64.562, 51.237, 61.175, 66.921, 52.730, 71.313, 61.435,
   54.075, 53.889, 65.605, 61.095, 64.255, 67.399, 66.005, 62.520, 65.054, 67.487, 72.863, 51.562, 59.798, 72.588, 53.941, 64.686, 63.115, 59.303, 62.616,
   62.618, 59.336, 54.482, 61.926, 63.737, 66.682, 81.985, 67.634, 50.982, 62.950, 55.467, 50.055, 53.240, 56.180, 61.387, 56.032, 61.681, 65.914, 50.175,
   55.854, 65.824, 57.729, 69.060, 56.540, 55.426, 63.471, 61.276, 58.486, 54.133, 65.368, 62.800, 60.480, 63.399, 61.993, 56.346, 56.687, 62.203, 58.923,
   69.943, 67.761, 71.810, 68.806, 57.024, 67.235, 56.444, 52.756, 75.173, 59.141, 65.701, 60.131, 58.997, 55.449, 60.418, 59.017, 56.738, 60.007, 61.859,
   55.944, 60.484, 47.589, 53.072, 56.465, 58.996, 57.343, 63.178, 62.267, 54.221, 60.082, 56.046, 62.300, 57.314, 55.766, 66.100, 60.683, 51.872, 66.475,
   56.203, 64.437, 52.288, 63.073, 59.963, 54.568, 72.809, 56.509, 46.800, 54.269, 55.353, 58.900, 64.481, 53.337, 65.307, 57.298, 55.756, 53.218, 60.012,
   63.057, 57.061, 61.667, 64.177, 66.500, 50.857, 71.643, 58.832, 57.254, 52.423, 65.678, 56.640, 53.975, 60.074, 56.762, 59.104, 53.543, 54.356, 51.020,
   60.644, 53.528, 63.621, 70.020, 78.195, 56.962, 69.331, 63.798, 85.645, 63.331, 70.250, 71.858, 53.169, 61.041, 60.800, 67.296, 54.907, 58.374, 62.803,
   69.660, 87.917, 62.889, 63.828, 56.110, 55.408, 70.849, 66.546, 57.452, 54.410, 57.298, 65.111, 57.104, 57.894, 59.833, 71.841, 60.077, 63.130, 68.257,
   60.749, 56.665, 71.957, 56.626, 63.362, 66.183, 67.112, 59.187, 56.043, 58.630, 64.422, 57.185, 70.433, 63.657, 55.692, 56.685, 69.924, 60.284, 62.069,
   60.344, 63.281, 49.855, 54.972, 64.688, 51.985, 61.996, 50.710, 75.840, 67.671, 63.230, 59.018, 73.893, 60.039, 61.867, 51.349, 66.322, 58.371, 64.006,
   66.213, 78.467, 69.303, 58.245, 59.421, 68.704, 64.342, 54.723, 67.907, 60.525, 55.785, 64.921, 55.975, 64.833, 68.173, 53.687, 65.474, 58.034, 63.138,
   57.028, 59.145, 63.407, 56.868, 75.781, 69.534, 66.594, 69.940, 69.147, 71.742, 59.833, 70.317, 79.709, 56.989, 62.303, 55.452, 54.552, 76.004, 54.411,
   54.664, 67.677, 57.998, 63.712, 61.546, 58.527, 56.421, 58.941, 66.884, 61.388, 71.593, 53.039, 66.624, 70.171, 84.652, 79.991, 59.553, 58.558, 56.953,
   59.050, 60.461, 67.588, 75.985, 54.059, 53.455, 63.529, 56.396, 60.708, 52.839, 51.109, 52.109, 48.350, 50.237, 63.219, 57.127, 53.946, 57.776, 69.311,
   59.162, 61.161, 51.297, 61.098, 65.752, 54.872, 50.947, 65.750, 52.616, 55.646, 61.031, 74.272, 54.319, 67.086, 72.245, 56.616, 70.933, 59.015, 58.863,
   53.706, 62.341, 62.769, 64.560, 65.254, 58.791, 64.584, 62.524, 54.146, 57.941, 55.630, 70.776, 53.947, 57.485, 64.616, 58.892, 62.958, 59.290, 55.893,
   60.310, 67.236, 62.722, 53.360, 52.719, 62.289, 55.460, 64.242, 65.309, 64.428, 51.716, 68.324, 58.028, 53.195, 54.660, 64.315, 60.171, 65.710, 57.239,
   60.011, 61.801, 61.596, 58.836, 54.565, 58.124, 74.113, 66.077, 53.347, 68.452, 68.056, 71.697, 64.491, 56.987, 60.172, 61.238, 56.726, 73.197, 56.837,
   71.024, 63.290, 58.921, 58.033, 59.368, 66.911, 51.877, 67.558, 77.326, 69.861, 51.979, 65.841, 59.327, 62.009, 60.616, 67.005, 60.163, 73.807, 55.235,
   63.294, 65.962, 56.736, 54.306, 53.841, 77.852, 66.907, 66.206, 66.613, 76.749, 66.715, 55.263, 57.945, 57.223, 50.971, 62.533, 62.065, 66.566, 55.234,
   72.049, 66.612, 63.389, 56.997, 52.050, 66.389, 55.390, 64.461, 64.357, 70.661, 59.369, 70.833, 57.373 ]

Are we calculating tree lengths for the post-burnin sample only?
TRUE

#####################
# Test .summarize() #
#####################

Generate a summary of the trace, including all post-burnin trees and
all clades with a posterior probability of at least 0.05:

========================================
Printing Posterior Distribution of Trees
========================================

Cum. Prob.      Samples         Posterior       Tree            
----------------------------------------------------------------
0.1200          54.0000         0.1200          ((((Hm,Hp),N),(B,S)),O)
0.2044          38.0000         0.0844          ((((B,S),(Hm,Hp)),N),O)
0.2844          36.0000         0.0800          ((((Hm,Hp),S),(B,N)),O)
0.3578          33.0000         0.0733          ((((Hm,Hp),B),(N,S)),O)
0.4178          27.0000         0.0600          ((((B,N),S),(Hm,Hp)),O)
0.4733          25.0000         0.0556          (((((Hm,Hp),S),B),N),O)
0.5244          23.0000         0.0511          ((((Hm,Hp),(N,S)),B),O)
0.5756          23.0000         0.0511          (((((Hm,Hp),N),S),B),O)
0.6244          22.0000         0.0489          ((((B,S),N),(Hm,Hp)),O)
0.6711          21.0000         0.0467          ((((N,S),B),(Hm,Hp)),O)
0.7156          20.0000         0.0444          (((((Hm,Hp),N),B),S),O)
0.7578          19.0000         0.0422          (((((Hm,Hp),S),N),B),O)
0.7889          14.0000         0.0311          ((((B,N),(Hm,Hp)),S),O)
0.8200          14.0000         0.0311          (((((Hm,Hp),B),S),N),O)
0.8511          14.0000         0.0311          (((((Hm,Hp),B),N),S),O)
0.8622          5.0000          0.0111          ((((Hm,N),Hp),(B,S)),O)
0.8711          4.0000          0.0089          ((((Hm,S),Hp),(B,N)),O)
0.8800          4.0000          0.0089          ((((B,Hm),Hp),(N,S)),O)
0.8889          4.0000          0.0089          (((((B,Hp),Hm),S),N),O)
0.8956          3.0000          0.0067          ((((Hm,S),(Hp,N)),B),O)
0.9000          2.0000          0.0044          ((((Hp,N),S),(B,Hm)),O)
0.9044          2.0000          0.0044          ((((Hp,N),Hm),(B,S)),O)
0.9089          2.0000          0.0044          ((((Hm,N),(Hp,S)),B),O)
0.9133          2.0000          0.0044          ((((B,S),Hp),(Hm,N)),O)
0.9178          2.0000          0.0044          (((((Hp,N),B),Hm),S),O)
0.9222          2.0000          0.0044          (((((Hm,S),N),B),Hp),O)
0.9267          2.0000          0.0044          (((((B,Hp),S),Hm),N),O)
0.9311          2.0000          0.0044          (((((B,Hm),S),N),Hp),O)
0.9333          1.0000          0.0022          ((((N,S),Hm),(B,Hp)),O)
0.9356          1.0000          0.0022          ((((Hp,S),Hm),(B,N)),O)
0.9378          1.0000          0.0022          ((((Hp,N),B),(Hm,S)),O)
0.9400          1.0000          0.0022          ((((Hm,S),N),(B,Hp)),O)
0.9422          1.0000          0.0022          ((((Hm,Hp),B),O),(N,S))
0.9444          1.0000          0.0022          ((((B,S),(Hm,N)),Hp),O)
0.9467          1.0000          0.0022          ((((B,N),Hm),(Hp,S)),O)
0.9489          1.0000          0.0022          ((((B,N),(Hm,S)),Hp),O)
0.9511          1.0000          0.0022          ((((B,Hp),S),(Hm,N)),O)
0.9533          1.0000          0.0022          ((((B,Hp),(N,S)),Hm),O)
0.9556          1.0000          0.0022          ((((B,Hp),(Hm,S)),N),O)
0.9578          1.0000          0.0022          ((((B,Hm),(Hp,S)),N),O)
0.9600          1.0000          0.0022          (((((N,S),Hm),Hp),B),O)
0.9622          1.0000          0.0022          (((((Hp,S),N),Hm),B),O)
0.9644          1.0000          0.0022          (((((Hp,S),Hm),N),B),O)
0.9667          1.0000          0.0022          (((((Hp,S),Hm),B),N),O)
0.9689          1.0000          0.0022          (((((Hp,S),B),N),Hm),O)
0.9711          1.0000          0.0022          (((((Hp,N),S),Hm),B),O)
0.9733          1.0000          0.0022          (((((Hp,N),Hm),B),S),O)
0.9756          1.0000          0.0022          (((((Hm,S),N),Hp),B),O)
0.9778          1.0000          0.0022          (((((Hm,S),Hp),B),N),O)
0.9800          1.0000          0.0022          (((((Hm,S),B),Hp),N),O)
0.9822          1.0000          0.0022          (((((Hm,N),B),Hp),S),O)
0.9844          1.0000          0.0022          (((((B,S),N),Hp),Hm),O)
0.9867          1.0000          0.0022          (((((B,S),Hp),Hm),N),O)
0.9889          1.0000          0.0022          (((((B,N),Hm),Hp),S),O)
0.9911          1.0000          0.0022          (((((B,Hp),N),S),Hm),O)
0.9933          1.0000          0.0022          (((((B,Hm),S),Hp),N),O)
0.9956          1.0000          0.0022          (((((B,Hm),N),S),Hp),O)
0.9978          1.0000          0.0022          (((((B,Hm),N),Hp),S),O)
1.0000          1.0000          0.0022          (((((B,Hm),Hp),N),S),O)



=========================================
Printing Posterior Distribution of Clades
=========================================


Samples         Posterior       Clade           
--------------------------------------------------------------
450.0000        1.0000          {B, Hm, Hp, N, O, S}
449.0000        0.9978          {B, Hm, Hp, N, S}
384.0000        0.8533          {Hm, Hp}
126.0000        0.2800          {B, S}
105.0000        0.2333          {Hm, Hp, N}
90.0000         0.2000          {B, Hm, Hp, S}
88.0000         0.1956          {Hm, Hp, S}
85.0000         0.1889          {N, S}
85.0000         0.1889          {B, N}
75.0000         0.1667          {Hm, Hp, N, S}
71.0000         0.1578          {B, N, S}
71.0000         0.1578          {B, Hm, Hp}
55.0000         0.1222          {B, Hm, Hp, N}


###################
# Test .methods() #
###################

Available methods for an object of type TraceTree:

cladeProbability = cladeProbability (Clade<any> clade,                   Bool<any> verbose)
computeEntropy = computeEntropy (Probability<any> credibleTreeSetSize,                 Natural<any> num_taxa,                 Bool<any> verbose)
computePairwiseRFDistances = computePairwiseRFDistances (Probability<any> credibleTreeSetSize,                             Bool<any> verbose)
computeTreeLengths = computeTreeLengths ()
getBurnin = getBurnin ()
getNumberSamples = getNumberSamples (Bool<any> post)
getTMRCA = getTMRCA (Clade<any> clade,           Bool<any> strict,           Bool<any> stem)
getTopologyFrequency = getTopologyFrequency (Tree<any> tree,                       Bool<any> verbose)
getTree = getTree (Natural<any> index,          Bool<any> post)
getTrees = getTrees ()
getUniqueClades = getUniqueClades (Probability<any> credibleTreeSetSize,                  Bool<any> nonTrivial,                  Bool<any> verbose)
getUniqueTrees = getUniqueTrees (Probability<any> credibleTreeSetSize,                 Bool<any> verbose)
isTreeCovered = isTreeCovered (Tree<any> tree,                Probability<any> ci_size,                Bool<any> verbose)
jointCladeProbability = jointCladeProbability (Clade[]<any> clades,                        Bool<any> verbose)
methods = methods ()
setBurnin = setBurnin (Probability|Integer<any> burnin)
setOutgroup = setOutgroup (Clade<any> clade)
size = size (Bool<any> post)
summarize = summarize (Probability<any> credibleTreeSetSize,            Probability<any> minCladeProbability,            Bool<any> verbose)
