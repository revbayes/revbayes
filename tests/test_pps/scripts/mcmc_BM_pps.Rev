################################################################################
#
# RevBayes Example: Bayesian inference of rates of evolution under a
#                   constant-rate Brownian-motion model and
#                   posterior predictive simulations
#
#
# authors: Michael R. May and Sebastian Höhna
#
################################################################################

seed(1234)
        
#######################
# Reading in the Data #
#######################

### Select the trait to analyze
# Datasets: Female Mass, Tail Length – Body Length Residuals, Body Length – Mass Residuals, Maximum Age, Sexual Dimorphism, Geographic Range Size, Latitudinal Midpoint, Distance to Continental Centroid, Population Density, Home Range Size, Group Size, Gestation Duration, Litter size
trait <- 1

### Read in the trees
T <- readTrees("data/primates_tree.nex")[1]

### Read in the character data
data <- readContinuousCharacterData("data/primates_cont_traits.nex")
data.excludeAll()
data.includeCharacter( trait )

# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

##########################
# Specify the tree model #
##########################

tree <- T

##########################
# Specify the rate model #
##########################

sigma2 ~ dnLoguniform(1e-5, 1e-1)
moves.append( mvScale(sigma2, weight=1.0) )


##########################
# Specify the BM process #
##########################

X ~ dnPhyloBrownianREML(tree, branchRates=sqrt(sigma2) )
X.clamp(data)



#############
# The Model #
#############

mymodel = model(sigma2)

### set up the monitors that will output parameter values to file and screen
monitors.append( mnModel(filename="output/simple_BM.log", printgen=10) )
# 3. and a stochastic variable monitor for the posterior prediction #
monitors.append( mnStochasticVariable(filename="output/simple_BM.var",printgen=10) )





################
# The Analysis #
################

### workspace mcmc ###
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")


### run the MCMC ###
mymcmc.burnin(generations=5000, tuningInterval=100)
mymcmc.run(generations=50000, tuningInterval=100)



###################################
# Posterior Predictive Simulation #
###################################


# Reading Trace
trace = readStochasticVariableTrace("output/simple_BM.var", delimiter=TAB)

# Creating Posterior Predictive Simulation
pps = posteriorPredictiveSimulation(mymodel, directory="output/simple_BM_post_sims", trace)

# Running the posterior predictive simulation
pps.run(thinning=10)




## quit ##
q()
